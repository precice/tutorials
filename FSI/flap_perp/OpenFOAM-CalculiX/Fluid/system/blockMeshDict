FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1.;

x0 -3.; 
x1 -0.05;
x2 0.05;
x3 3.;

z0 0.;
z1 1.;
z2 4.;

w 0.3;

vertices
(
    ($x0  $w  $z0)         // 0
    ($x1  $w  $z0)         // 1
    ($x2  $w  $z0)         // 2
    ($x3  $w  $z0)         // 3
    ($x0  $w  $z1)         // 4
    ($x1  $w  $z1)         // 5
    ($x2  $w  $z1)         // 6
    ($x3  $w  $z1)         // 7
    ($x0  $w  $z2)         // 8
    ($x1  $w  $z2)         // 9
    ($x2  $w  $z2)         // 10
    ($x3  $w  $z2)         // 11
         
    ($x0  0.0 $z0)         // 12
    ($x1  0.0 $z0)         // 13
    ($x2  0.0 $z0)         // 14
    ($x3  0.0 $z0)         // 15
    ($x0  0.0 $z1)         // 16
    ($x1  0.0 $z1)         // 17
    ($x2  0.0 $z1)         // 18
    ($x3  0.0 $z1)         // 19
    ($x0  0.0 $z2)         // 20
    ($x1  0.0 $z2)         // 21
    ($x2  0.0 $z2)         // 22
    ($x3  0.0 $z2)         // 23
);

// Grading
h1 30;      
h2 3;       
v1 15;      
v2 30;

blocks
(
    hex (   0   1   5   4   12  13  17  16  )
    ($h1 $v1 1 )
    simpleGrading (0.5 1 1)

    hex (   2   3   7   6   14  15  19  18  )
    ($h1 $v1 1)
    simpleGrading (2 1 1)

    hex (   4   5   9   8   16  17  21  20  )
    ($h1 $v2 1)
    simpleGrading (0.5 2 1)

    hex (   5   6   10  9   17  18  22  21  )
    ($h2 $v2 1)
    simpleGrading (1 2 1)

    hex (   6   7   11  10  18  19  23  22  )
    ($h1 $v2 1 )
    simpleGrading (2 2 1)
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (  0   4   16  12  )
            (  4   8   20  16  )
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (   3   7   19  15  )
            (   7   11  23  19  )
        );
    }
    flap
    {
        type wall;
        faces
        (
            (   1   5   17  13  )
            (   5   6   18  17  )
            (   6   2   14  18  )
        );
    }
    upperWall
    {
        type wall;
        faces
        (
            (   8   9   21  20  )
            (   9   10  22  21  )
            (   10  11  23  22  )
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (   0   1   13  12  )
            (   2   3   15  14  )
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (   0   1   5   4   )
            (   2   3   7   6   )
            (   4   5   9   8   )
            (   5   6   10  9   )
            (   6   7   11  10  )
            (   12  13  17  16  )
            (   14  15  19  18  )
            (   16  17  21  20  )
            (   17  18  22  21  )
            (   18  19  23  22  )
        );
    }
);

// ************************************************************************* //
