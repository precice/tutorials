FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

x0 0.;
x1 1.;
x2 2.;
x3 3.;
x4 4.;
x5 5.;
x6 6.;

y0 0.;
y1 1.;
y2 2.;

z0 0;
z1 1;

// this can probably be done more efficiently e. g. larger cells around obstacle

vertices
(
    ($x0 $y0 $z0 )         // 0
    ($x1 $y0 $z0 )         // 1
    ($x2 $y0 $z0 )         // 2
    ($x3 $y0 $z0 )         // 3
    ($x4 $y0 $z0 )         // 4
    ($x5 $y0 $z0 )         // 5
    ($x6 $y0 $z0 )         // 6
    ($x0 $y1 $z0 )         // 7
    ($x1 $y1 $z0 )         // 8
    ($x2 $y1 $z0 )         // 9
    ($x3 $y1 $z0 )         // 10
    ($x4 $y1 $z0 )         // 11
    ($x5 $y1 $z0 )         // 12
    ($x6 $y1 $z0 )         // 13
    ($x0 $y2 $z0 )         // 14
    ($x1 $y2 $z0 )         // 15
    ($x2 $y2 $z0 )         // 16
    ($x3 $y2 $z0 )         // 17
    ($x4 $y2 $z0 )         // 18
    ($x5 $y2 $z0 )         // 19
    ($x6 $y2 $z0 )         // 20

    ($x0 $y0 $z1 )         // 21
    ($x1 $y0 $z1 )         // 22
    ($x2 $y0 $z1 )         // 23
    ($x3 $y0 $z1 )         // 24
    ($x4 $y0 $z1 )         // 25
    ($x5 $y0 $z1 )         // 26
    ($x6 $y0 $z1 )         // 27
    ($x0 $y1 $z1 )         // 28
    ($x1 $y1 $z1 )         // 29
    ($x2 $y1 $z1 )         // 30
    ($x3 $y1 $z1 )         // 31
    ($x4 $y1 $z1 )         // 32
    ($x5 $y1 $z1 )         // 33
    ($x6 $y1 $z1 )         // 34
    ($x0 $y2 $z1 )         // 35
    ($x1 $y2 $z1 )         // 36
    ($x2 $y2 $z1 )         // 37
    ($x3 $y2 $z1 )         // 38
    ($x4 $y2 $z1 )         // 39
    ($x5 $y2 $z1 )         // 40
    ($x6 $y2 $z1 )         // 41
);

// TODO
blocks
(

);

boundary
(
    inlet
    {

    }

    outlet
    {

    }

    obstacle
    {

    }

    upperWall
    {

    }

    lowerWall
    {

    }

    frontAndBack
    {

    }
);